name: CI

on:
  push:
    branches: [main, master]

jobs:
  lint:
    name: 🧹 Lint
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: ./hackhunt-frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      - run: echo "⚠️ Skipping real linting..."

  typecheck:
    name: 🧠 Type Check
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: ./hackhunt-frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      - run: echo "⚠️ Skipping real type check..."

  test:
    name: 🧪 Unit Tests & Coverage
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    defaults:
      run:
        working-directory: ./hackhunt-frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      - name: 🧪 Run tests with coverage
        run: npx jest --coverage
      - name: ⬆️ Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  build:
    name: 🛠️ Build
    runs-on: ubuntu-latest
    needs: [test]
    defaults:
      run:
        working-directory: ./hackhunt-frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: 📁 Create .env.local
        run: echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env.local
      - run: npm install
      - run: npm run build

  deploy:
    name: 🚀 Deploy (Demo)
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - run: echo "🎉 Pretend we deployed to Render/Netlify/Vercel"
