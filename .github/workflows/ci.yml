name: CI

on:
  push:
    branches: [main, master]

jobs:
  lint:
    name: 🧹 Lint
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: ./hackhunt-frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      - run: echo "⚠️ Skipping real linting..."
        # or simulate it: npm run lint || echo "Lint skipped"

  typecheck:
    name: 🧠 Type Check
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: ./hackhunt-frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      - run: echo "⚠️ Skipping real type check..."
        # or: npx tsc --noEmit || echo "Type check failed"

  test:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    defaults:
      run:
        working-directory: ./hackhunt-frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      - run: echo "✅ Pretending tests passed"

  build:
    name: 🛠️ Build
    runs-on: ubuntu-latest
    needs: [test]
    defaults:
      run:
        working-directory: ./hackhunt-frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: 📁 Create .env.local
        run: echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env.local
      - run: npm install
      - run: npm run build

  deploy:
    name: 🚀 Deploy (Demo)
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - run: echo "🎉 Pretend we deployed to Render/Netlify/Vercel"
